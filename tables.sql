create table
  public.attendance (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    date timestamp with time zone null,
    conductors json null default '{}'::json,
    excused text[] not null default '{}'::text[],
    plan jsonb null,
    img text null,
    "playerNotes" json null default '{}'::json,
    players json null,
    "typeInfo" text null,
    "criticalPlayers" bigint[] null default '{}'::bigint[],
    type text null default 'uebung'::text,
    constraint attendance_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.instruments (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    name text null,
    notes text null,
    range text null,
    tuning text null,
    clefs text[] null,
    constraint instruments_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.meetings (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    notes text null,
    attendees bigint[] null default '{}'::bigint[],
    date timestamp with time zone null,
    constraint meetings_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.scores (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    name text null,
    constraint scores_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.settings (
    id bigint generated by default as identity,
    "attDate" timestamp with time zone null,
    "practiceStart" text null,
    "practiceEnd" text null,
    constraint settings_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.songs (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    number bigint null,
    name text null,
    "withOrchestra" boolean null default false,
    link text null,
    "withChoir" boolean null default false,
    constraint songs_pkey primary key (id),
    constraint songs_number_key unique (number)
  ) tablespace pg_default;

create table
  public.conductors (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    "firstName" text null,
    "lastName" text null,
    birthday timestamp with time zone null,
    joined timestamp with time zone null default now(),
    "left" timestamp with time zone null,
    email text null,
    "correctBirthday" boolean null default false,
    img text null,
    notes text null,
    "appId" uuid null,
    constraint conductors_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.player (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    "firstName" text null,
    "lastName" text null,
    birthday timestamp with time zone null,
    instrument bigint null,
    "playsSince" timestamp with time zone null,
    joined timestamp with time zone null,
    "isLeader" boolean null default false,
    "hasTeacher" boolean null default false,
    notes text null,
    "left" timestamp with time zone null,
    "isCritical" boolean null default false,
    "lastSolve" timestamp with time zone null,
    "correctBirthday" boolean null default false,
    paused boolean null default false,
    history json null default '[]'::json,
    "criticalReason" smallint null,
    "otherExercise" text null,
    email text null,
    "appId" uuid null,
    img text null,
    instruments text null,
    range text null,
    constraint player_pkey primary key (id),
    constraint player_instrument_fkey foreign key (instrument) references instruments (id)
  ) tablespace pg_default;

create table
  public.history (
    id bigint generated by default as identity,
    created_at timestamp with time zone null default now(),
    date timestamp with time zone null,
    conductor bigint null,
    "songId" bigint null,
    "otherConductor" text null,
    constraint history_pkey primary key (id),
    constraint history_conductor_fkey foreign key (conductor) references conductors (id),
    constraint history_songId_fkey foreign key ("songId") references songs (id)
  ) tablespace pg_default;

  create table
  public.viewers (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    "appId" uuid null,
    "firstName" text null,
    "lastName" text null,
    email text null,
    constraint viewers_pkey primary key (id),
    constraint viewers_appId_fkey foreign key ("appId") references auth.users (id) on delete cascade
  ) tablespace pg_default;

